	*(.text.is_user_ta_ctx)
	*(.text.cpu_mmu_enable)
	*(.text.cpu_mmu_enable_icache)
	*(.text.cpu_mmu_enable_dcache)
	*(.text.__cpu_spin_lock)
	*(.text.__cpu_spin_trylock)
	*(.text.__cpu_spin_unlock)
	*(.text.spinlock_count_incr)
	*(.text.spinlock_count_decr)
	*(.text.have_spinlock)
	*(.text.tlbi_all)
	*(.text.dcache_cleaninv_range)
	*(.text.dcache_inv_range)
	*(.text.icache_inv_all)
	*(.text.vector_std_smc_entry)
	*(.text.vector_fast_smc_entry)
	*(.text.vector_fiq_entry)
	*(.text.vector_cpu_on_entry)
	*(.text.vector_cpu_off_entry)
	*(.text.vector_cpu_suspend_entry)
	*(.text.vector_cpu_resume_entry)
	*(.text.vector_system_off_entry)
	*(.text.vector_system_reset_entry)
	*(.text.thread_vector_table)
	*(.text.thread_resume)
	*(.text.thread_std_smc_entry)
	*(.text.thread_smc)
	*(.text.thread_init_vbar)
	*(.text.thread_unwind_user_mode)
	*(.text.thread_excp_vect)
	*(.text.el0_svc)
	*(.text.el1_sync_abort)
	*(.text.el0_sync_abort)
	*(.text.elx_irq)
	*(.text.elx_fiq)
	*(.text.mobj_free)
	*(.text.mobj_get_cookie)
	*(.text.thread_check_canaries)
	*(.text.thread_get_exceptions)
	*(.text.get_core_pos)
	*(.text.lock_global)
	*(.text.unlock_global)
	*(.text.thread_set_exceptions)
	*(.text.thread_mask_exceptions)
	*(.text.thread_unmask_exceptions)
	*(.text.thread_get_core_local)
	*(.text.thread_clr_boot_thread)
	*(.text.thread_handle_fast_smc)
	*(.text.thread_get_tmp_sp)
	*(.text.thread_get_saved_thread_sp)
	*(.text.thread_stack_size)
	*(.text.thread_is_from_abort_mode)
	*(.text.thread_get_id_may_fail)
	*(.text.thread_stack_start)
	*(.text.thread_get_id)
	*(.text.thread_lazy_save_ns_vfp)
	*(.text.thread_handle_std_smc)
	*(.text.thread_lazy_restore_ns_vfp)
	*(.text.thread_state_free)
	*(.text.thread_init_threads)
	*(.text.thread_init_boot_thread)
	*(.text.thread_init_primary)
	*(.text.thread_init_per_cpu)
	*(.text.thread_get_tsd)
	*(.text.thread_kernel_save_vfp)
	*(.text.thread_kernel_restore_vfp)
	*(.text.thread_user_enable_vfp)
	*(.text.thread_user_save_vfp)
	*(.text.thread_state_suspend)
	*(.text.thread_disable_prealloc_rpc_cache)
	*(.text.thread_enable_prealloc_rpc_cache)
	*(.text.save_abort_info_in_tsd)
	*(.text.handle_user_ta_panic.isra.5)
	*(.text.__abort_print.part.6)
	*(.text.abort_is_user_exception)
	*(.text.__print_abort_info)
	*(.text.abort_print_error)
	*(.text.abort_print)
	*(.text.abort_handler)
	*(.text.vfp_is_enabled)
	*(.text.vfp_enable)
	*(.text.vfp_disable)
	*(.text.vfp_lazy_save_state_init)
	*(.text.vfp_lazy_save_state_final)
	*(.text.vfp_lazy_restore_state)
	*(.text.vfp_save_extension_regs)
	*(.text.vfp_restore_extension_regs)
	*(.text.trace_ext_puts)
	*(.text.trace_ext_get_thread_id)
	*(.text.__get_core_pos)
	*(.text.get_core_pos_mpidr)
	*(.text.pm_do_nothing)
	*(.text.main_init_gic)
	*(.text.main_secondary_init_gic)
	*(.text.init_tee_runtime)
	*(.text.generic_boot_init_primary)
	*(.text.generic_boot_cpu_on_handler)
	*(.text._start)
	*(.text.cpu_on_handler)
	*(.text.unhandled_cpu)
	*(.text.reset_vect_table)
	*(.text.unwind_stack_arm64)
	*(.text.print_stack_arm64)
	*(.text.print_kernel_stack)
	*(.text.dummy.tee_svc_handler)
	*(.text.dummy.tee_entry_std)
	*(.text.dummy.init_teecore)
	*(.text.dummy.__thread_std_smc_entry)
	*(.text.va_is_in_map)
	*(.text.find_map_by_va)
	*(.text.find_map_by_pa)
	*(.text.cmp_pmem_by_addr)
	*(.text.cmp_mmap_by_lower_va)
	*(.text.cmp_mmap_by_bigger_region_size)
	*(.text.map_pa2va)
	*(.text.to_user_ta_ctx.part.8)
	*(.text.add_va_space.constprop.17)
	*(.text._pbuf_is_inside.constprop.21)
	*(.text.find_map_by_type_and_pa)
	*(.text.core_mmu_set_discovered_nsec_ddr)
	*(.text.core_mmu_nsec_ddr_is_defined)
	*(.text.core_mmu_type_to_attr)
	*(.text.core_init_mmu_map)
	*(.text.core_pbuf_is)
	*(.text.core_mmu_get_mem_by_type)
	*(.text.core_mmu_set_entry)
	*(.text.core_mmu_get_entry)
	*(.text.core_mmu_map_region)
	*(.text.virt_to_phys)
	*(.text.check_va_matches_pa.part.13)
	*(.text.phys_to_virt)
	*(.text.phys_to_virt_io)
	*(.text.cpu_mmu_enabled)
	*(.text.io_pa_or_va)
	*(.text.mobj_get_pa)
	*(.text.tee_mmu_user_va2pa_attr.isra.14)
	*(.text.tee_mmu_user_va2pa_helper)
	*(.text.tee_mmu_user_pa2va_helper)
	*(.text.tee_mmu_get_ctx)
	*(.text.teecore_init_ta_ram)
	*(.text.calc_physical_addr_size_bits)
	*(.text.core_init_mmu_regs)
	*(.text.core_init_mmu_prtn)
	*(.text.core_init_mmu)
	*(.text.core_mmu_place_tee_ram_at_top)
	*(.text.core_mmu_set_max_pa)
	*(.text.core_mmu_find_table)
	*(.text.core_mmu_entry_to_finer_grained)
	*(.text.core_mmu_set_entry_primitive)
	*(.text.core_mmu_get_entry_primitive)
	*(.text.core_mmu_user_va_range_is_defined)
	*(.text.core_mmu_get_user_va_range)
	*(.text.core_mmu_user_mapping_is_active)
	*(.text.core_mmu_get_user_map)
	*(.text.core_mmu_set_user_map)
	*(.text.core_mmu_get_fault_type)
	*(.text.cpu_spin_lock_xsave_dldetect)
	*(.text.pfree.isra.2)
	*(.text.cpu_spin_unlock_xrestore)
	*(.text.tee_mm_init)
	*(.text.tee_mm_free)
	*(.text.tee_mm_final)
	*(.text.tee_mm_is_empty)
	*(.text.pgt_init)
	*(.text.tee_entry_get_api_call_count)
	*(.text.tee_entry_get_api_uuid)
	*(.text.tee_entry_get_api_revision)
	*(.text.tee_entry_get_os_uuid)
	*(.text.tee_entry_get_os_revision)
	*(.text.tee_entry_fast)
	*(.text.main_fiq)
	*(.text.generic_boot_get_handlers)
	*(.text.console_init)
	*(.text._assert_log)
	*(.text._assert_break)
	*(.text.console_putc)
	*(.text.console_flush)
	*(.text.register_serial_console)
	*(.text.__do_panic)
	*(.text.is_valid_conf_and_notnull_size)
	*(.text._core_is_buffer_inside)
	*(.text._core_is_buffer_outside)
	*(.text._core_is_buffer_intersect)
	*(.text.tee_ta_get_current_session)
	*(.text.scattered_array_relax_ptr)
	*(.text.serial8250_uart_have_rx_data)
	*(.text.serial8250_uart_getchar)
	*(.text.serial8250_uart_flush)
	*(.text.serial8250_uart_putc)
	*(.text.serial8250_uart_init)
	*(.text.raw_malloc_return_hook.constprop.22)
	*(.text.malloc_lock.constprop.23)
	*(.text.bget)
	*(.text.bgetz)
	*(.text.brel)
	*(.text.bgetr)
	*(.text.free_helper)
	*(.text.bpool)
	*(.text.calloc)
	*(.text.free)
	*(.text.malloc_add_pool)
	*(.text.swapfunc)
	*(.text.med3)
	*(.text.qsort)
	*(.text.memcpy)
	*(.text.memmove)
	*(.text.memset)
	*(.text.strlen)
	*(.text.__vsnprintf)
	*(.text.vsnprintk)
	*(.text.snprintk)
	*(.text.trace_vprintf)
	*(.text.trace_printf)
	*(.text.memchr)
